

name: codecov
on:
  push:
    branches: 
      - 'develop'
      # - 'main'
      # - 'section-*'
      # - '1.*'
      # - '2.*'
      # - '3.*'
      # - '4.*'
      # - '5.*'
    # tags:
    #   - '*'
  pull_request:
    branches:
      - 'develop'
      # - 'main'
      # - 'section-*'
      # - '1.*'
      # - '2.*'
      # - '3.*'
      # - '4.*'
      # - '5.*'
jobs:
  # build:
  #   permissions:
  #     id-token: write
  #     contents: read
  #     attestations: write

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Build artifact
  #       run: make my-app
  #     - name: Attest
  #       uses: actions/attest-build-provenance@v1
  #       with:
  #         subject-path: '${{ github.workspace }}/my-app'
  tests:
    # strategy:
    #   matrix:
    #     os: [ubuntu-16.04, ubuntu-18.04]
    #     node: [6, 8, 10]
    #     exclude:
    #       - os: ubuntu-16.04
    #         node: 6
    #     include:
    #       - os: macos-latest
    #         node: 10
    # runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go environment
        id: goinit
        uses: actions/setup-go@v5.0.1
        with:
          cache: 'true' # optional, default is true
          go-version: '>=1.22.2' 
          go-version-file: 'path/to/go.mod' # superseded by go-version
          cache-dependency-path: |
                subdir/go.sum
                tools/go.sum
        #   # Used to pull Go distributions from go-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
        #   token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
        #   # Target architecture for Go to use. Examples: x86, x64. Will use system architecture by default.
        #   architecture: # optional
      - name: Gosec Security Checker
        id: gosec
        uses: securego/gosec@v2.20.0
        with:
          # we let the report trigger content trigger a failure using the GitHub Security features.
          args: '-no-fail -conf .github/configs/gosec.json -fmt sarif -out .github/outputs/gosec.sarif ./...'
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: .github/outputs/gosec.sarif
      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v6.0.1
        with:
          working-directory: somedir
          version: latest
          args: --timeout=30m --config=.github/configs/go-ci.yml --issues-exit-code=0
      - name: goreadme
        uses: posener/goreadme@v1.4.2
      - name: Run Test
        run: |
          go test -v ./... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out -o=coverage.out
      - name: Go Coverage Badge  # Pass the `coverage.out` output to this action
        uses: tj-actions/coverage-badge-go@v2
        id: coverage-badge-go
        with:
          filename: .github/outputs/coverage.out
          # Color of the badge - green/yellow/red
          # Type: string
          color: ''

          # At what percentage does the badge become green instead 
          # of yellow (default: 70) 
          # Type: string
          green: ''

          # Optional URL when you click the badge
          # Type: string
          link: ''

          # Target file (default "README.md")
          # Type: string
          target: ''

          # Text on the left side of the badge (default: "Coverage") 
          # Type: string
          text: ''

          # Text on the right side of the badge
          # Type: string
          value: ''

          # At what percentage does the badge become yellow instead 
          # of red (default 30) 
          # Type: string
          yellow: ''
      - name: terraform-cdk-action
        uses: hashicorp/terraform-cdk-action@v4
        if: false
        with:
          cdktfVersion: 0.20.7
          terraformVersion: 1.8.3
          commentOnPr: true
          updateComment: true
          # mode: 'plan-only'
          # stackName: 'cdktf'
          # cdktfArgs: 'synth'
      - name: Do Work
        run: |
          echo '::set-output name=FAV_NUMBER::3'
          echo '::set-output name=FAV_COLOR::blue'
        id: abc
      - name: Read output
        run: |
          echo "${{steps.abc.outputs.FAV_NUMBER}}"
          echo "${{steps.abc.outputs.FAV_COLOR}}"
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
    outputs:
      fav-animal: tiger
      fav-number: ${{steps.abc.outputs.FAV_NUMBER}}
  # job2:
  #   runs-on: ubuntu-latest
  #   needs: job1
  #   steps:
  #     - run: |
  #       echo "${{needs.job1.outputs.fav-animal}}"
  #       echo "${{needs.job1.outputs.fav-number}}"
